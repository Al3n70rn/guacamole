#!/usr/bin/env bash
#
# Script that can be sourced to populate $uber_jar xor {$guac_jar,$deps_jar} variables.

scripts_dir="$(dirname "${BASH_SOURCE[0]}")"
target_dir="$(dirname "$scripts_dir")"/target

mod_time() {
  stat -c %Y "$1"
}

min() {
  if [ "$1" -lt "$2" ]; then
    echo "$1"
  else
    echo "$2"
  fi
}

find_jars() {

  # Load in paths to relevant JARs (including the classpath file's contents, if it exists).
  local uber_jar="$("$scripts_dir"/assembly-jar 2> /dev/null)"
  local guac_jar="$("$scripts_dir"/guac-jar 2> /dev/null)"
  local deps_jar="$("$scripts_dir"/deps-jar 2> /dev/null)"

  main_jar=
  deps=

  # Minimum last-modified-time of the components comprising a full guacamole+dependencies classpath.
  # Used for choosing between multiple available ways of obtaining a full classpath, e.g. uber jar vs. guac+deps jars.
  local mod_time=

  if [ -n "$uber_jar" ]; then
    main_jar="$uber_jar"
    deps=
    mod_time="$(stat -c %Y "$uber_jar")"
  fi

  if [ -n "$guac_jar" ]; then
    guac_mod_time="$(stat -c %Y "$guac_jar")"

    if [ -n "$deps_jar" ]; then
      deps_jar_mod_time="$(min "$(stat -c %Y "$deps_jar")" "$guac_mod_time")"
      if [ -z "$mod_time" ] || [ "$deps_jar_mod_time" -gt "$mod_time" ]; then
        main_jar="$guac_jar"
        deps="$deps_jar"
        mod_time="$deps_jar_mod_time"
      fi
    fi
  fi

  if [ -z "$uber_jar" ]; then
    if [ -z "$guac_jar" ]; then
      echo "Couldn't find a guacamole or assembly jar." 1>&2
      return 1
    fi

    if [ -z "$deps_jar" ]; then
      echo "Couldn't find a guacamole dependencies jar or assembly jar." 1>&2
      return 2
    fi
  fi

  echo "Main JAR: $main_jar"
  if [ -n "$deps" ]; then
    echo "Deps JARs: $deps"
  fi
}
